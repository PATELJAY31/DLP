#include <iostream>
#include <string>

using namespace std;

class RecursiveDescentParser {
private:
    string input;
        int index;

            // Function to match and consume the expected character
                bool match(char expected) {
                        if (index < input.length() && input[index] == expected) {
                                    index++;
                                                return true;
                                                        }
                                                                return false;
                                                                    }

                                                                        // S → ( L ) | a
                                                                            bool S() {
                                                                                    if (match('a')) {
                                                                                                return true;
                                                                                                        } else if (match('(')) {
                                                                                                                    if (L() && match(')')) {
                                                                                                                                    return true;
                                                                                                                                                }
                                                                                                                                                        }
                                                                                                                                                                return false;
                                                                                                                                                                    }

                                                                                                                                                                        // L → S L'
                                                                                                                                                                            bool L() {
                                                                                                                                                                                    if (S()) {
                                                                                                                                                                                                return L_prime();
                                                                                                                                                                                                        }
                                                                                                                                                                                                                return false;
                                                                                                                                                                                                                    }

                                                                                                                                                                                                                        // L' → , S L' | ϵ
                                                                                                                                                                                                                            bool L_prime() {
                                                                                                                                                                                                                                    if (match(',')) {
                                                                                                                                                                                                                                                if (S()) {
                                                                                                                                                                                                                                                                return L_prime();
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        return false;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                        return true; // ϵ (empty) transition
                                                                                                                                                                                                                                                                                                            }

                                                                                                                                                                                                                                                                                                            public:
                                                                                                                                                                                                                                                                                                                RecursiveDescentParser(string str) {
                                                                                                                                                                                                                                                                                                                        // Remove spaces and initialize index
                                                                                                                                                                                                                                                                                                                                input = "";
                                                                                                                                                                                                                                                                                                                                        for (char c : str) {
                                                                                                                                                                                                                                                                                                                                                    if (c != ' ') input += c;
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                    index = 0;
                                                                                                                                                                                                                                                                                                                                                                        }

                                                                                                                                                                                                                                                                                                                                                                            // Start parsing and ensure full consumption of input
                                                                                                                                                                                                                                                                                                                                                                                bool isValid() {
                                                                                                                                                                                                                                                                                                                                                                                        return S() && index == input.length();
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                            };

                                                                                                                                                                                                                                                                                                                                                                                            int main() {
                                                                                                                                                                                                                                                                                                                                                                                                string test_cases[] = {"a", "(a)", "(a,a)", "(a,(a,a),a)", "(a,a),(a,a)", "a)", "(a a)", "(a,a a)", "(a,a),a"};
                                                                                                                                                                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                                                                                                                                                                        for (const string& test : test_cases) {
                                                                                                                                                                                                                                                                                                                                                                                                                RecursiveDescentParser parser(test);
                                                                                                                                                                                                                                                                                                                                                                                                                        cout << "Input: " << test << " -> Output: " << (parser.isValid() ? "Valid string" : "Invalid string") << endl;
                                                                                                                                                                                                                                                                                                                                                                                                                            }

                                                                                                                                                                                                                                                                                                                                                                                                                                return 0;
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                